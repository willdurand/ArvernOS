version: 2.1

references:
  defaults: &defaults
    docker:
      - image: willdurand/arvernos-circle:latest

commands:
  setup:
    parameters:
      arch:
        type: string
      board:
        type: string
        default: ""
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - when:
          condition: << parameters.board >>
          steps:
            - run:
                name: create config for Circle CI
                command: |
                  cp .circleci/config-<< parameters.arch >>-<< parameters.board >> config

      - unless:
          condition: << parameters.board >>
          steps:
            - run:
                name: create config for Circle CI
                command: |
                  cp .circleci/config-<< parameters.arch >> config

  build:
    parameters:
      target:
        type: string
      arch:
        type: string
      board:
        type: string
        default: ""
    steps:
      - setup:
          arch: << parameters.arch >>
          board: << parameters.board >>
      - run: make clean << parameters.target >>
      - when:
          condition: << parameters.board >>
          steps:
            - run:
                name: ensure the kernel has been built
                command: test -f build/<< parameters.arch >>/<< parameters.board >>/dist/kernel-<< parameters.arch >>-<< parameters.board >>.bin
      - unless:
          condition: << parameters.board >>
          steps:
            - run:
                name: ensure the kernel has been built
                command: test -f build/<< parameters.arch >>/dist/kernel-<< parameters.arch >>.bin

  run_qemu:
    parameters:
      title:
        type: string
      command:
        type: string
    steps:
      - run:
          name: << parameters.title >>
          command: << parameters.command >>
          no_output_timeout: 2m
          environment:
            TERM: xterm-256color

jobs:
  build-aarch32:
    <<: *defaults
    parameters:
      target:
        type: string
      board:
        type: string
    steps:
      - build:
          arch: aarch32
          board: << parameters.board >>
          target: << parameters.target >>
      - run:
          name: build checks
          command: |
            test -f build/aarch32/<< parameters.board >>/dist/ArvernOS-aarch32-<< parameters.board >>.img

  build-aarch64:
    <<: *defaults
    parameters:
      target:
        type: string
      board:
        type: string
    steps:
      - build:
          arch: aarch64
          board: << parameters.board >>
          target: << parameters.target >>
      - run:
          name: build checks
          command: |
            test -f build/aarch64/<< parameters.board >>/dist/ArvernOS-aarch64-<< parameters.board >>.img

  build-x86_64:
    <<: *defaults
    parameters:
      target:
        type: string
    steps:
      - build:
          arch: x86_64
          target: << parameters.target >>
      - run:
          name: build checks
          command: |
            test -f build/x86_64/dist/ArvernOS-x86_64.iso
            test -f build/x86_64/dist/libc-ArvernOS-x86_64.a
            test -f build/x86_64/misc/initrd.tar
            test -f build/x86_64/misc/isofiles/boot/grub/grub.cfg
            test -f build/x86_64/misc/isofiles/boot/kernel-x86_64.bin

  checks:
    <<: *defaults
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: fmt
          command: |
            make fmt
            git diff --exit-code || (echo "\n\nPlease run 'make fmt' to format the code and fix the problem(s) above"; false)

  unit-tests:
    <<: *defaults
    steps:
      - setup:
          arch: x86_64
      - run:
          name: unit tests
          command: |
            make clean test

  kernel-selftest-dlmalloc:
    <<: *defaults
    steps:
      - setup:
          arch: x86_64
      - run_qemu:
          title: kernel selftest
          command: |
            make clean run-test CMDLINE='kshell selftest' CONFIG_USE_DLMALLOC=1

  kernel-selftest-with-ubsan:
    <<: *defaults
    parameters:
      arch:
        type: string
      ubsan:
        type: integer
    steps:
      - setup:
          arch: << parameters.arch >>
      - run_qemu:
          title: kernel selftest
          command: |
            make clean run-test CMDLINE='kshell selftest' UBSAN=<< parameters.ubsan >>

  kernel-selftest-10-times:
    <<: *defaults
    parameters:
      arch:
        type: string
    steps:
      - setup:
          arch: << parameters.arch >>
      - run_qemu:
          title: kernel selftest ran 10 times
          command: |
            make clean run-test CMDLINE="$(echo "kshell$(printf ' selftest%.0s' {1..10})")"

  userland-test-suite-with-ubsan:
    <<: *defaults
    parameters:
      arch:
        type: string
      ubsan:
        type: integer
    steps:
      - setup:
          arch: << parameters.arch >>
      - run_qemu:
          title: userland test suite
          command: |
            make clean run-test UBSAN=<< parameters.ubsan >>

workflows:
  default-workflow:
    jobs:
      - build-aarch32:
          matrix:
            parameters:
              board: [licheepi-nano]
              target: [debug, release]
      - build-aarch64:
          matrix:
            parameters:
              board: [raspi3]
              target: [debug, release]
      - build-x86_64:
          matrix:
            parameters:
              target: [debug, release]
      - checks
      - kernel-selftest-dlmalloc
      - kernel-selftest-with-ubsan:
          matrix:
            parameters:
              arch: [x86_64]
              ubsan: [0, 1]
      - kernel-selftest-10-times:
          matrix:
            parameters:
              arch: [x86_64]
      - userland-test-suite-with-ubsan:
          matrix:
            parameters:
              arch: [x86_64]
              ubsan: [0, 1]
      - unit-tests
